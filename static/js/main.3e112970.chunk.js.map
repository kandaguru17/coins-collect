{"version":3,"sources":["appLogo.png","component/ProjectCard.js","ethereum/web3.js","ethereum/factory.js","containers/ShowProjects.js","component/From.js","containers/CreateProject.js","component/Navbar.js","component/ContributeForm.js","component/ProjectDetails.js","component/SpendingRequestForm.js","ethereum/campaign.js","containers/ViewProjectDetails.js","component/RequestTableRow.js","containers/ViewSpendingRequests.js","containers/UpdateProject.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ProjectCard","web3","address","onDelete","className","key","to","onClick","window","Web3","currentProvider","provider","providers","HttpProvider","factoryInstance","eth","Contract","JSON","parse","factory","interface","renderLoading","role","ShowProjects","useState","isloading","results","campaigns","setCampaigns","reRender","setReRender","useEffect","a","methods","getDeployedContracts","call","allCampaigns","filter","it","getAllCampaigns","getAccounts","accounts","deleteCampaign","send","from","map","From","onFormSubmit","state","onChange","title","formType","onSubmit","type","value","minimumContribution","placeholder","name","class","id","rows","description","disabled","isLoading","aria-hidden","CreateProject","message","setState","history","useHistory","e","prevState","preventDefault","createCampaign","push","data-dismiss","aria-label","persist","target","Navbar","style","backgroundColor","href","src","appLogo","width","height","alt","ContributeForm","buttonText","contributeToProject","amount","onInputChange","CONST_DEF","ProjectDetails","result","campaignId","renderCards","metric","metaData","cursor","SpendingRequestForm","recepient","getDeployedCampaignInstance","campaign","ViewProjectDetails","props","match","params","campaignInstance","getCampaignInstance","getCampaignInfo","projectData","getProejctData","createSpendingRequest","desc","rece","contribute","RequestTableRow","counter","rowData","contributorsCount","finalizeRequest","approveRequest","scope","ViewSpendingRequests","spendingRequests","srArr","cCount","getSpendingRequestLength","srLen","i","requests","sr","getSpendingRequests","index","account","textOverflow","console","log","UpdateProject","res","getIntialData","updateCampaign","App","path","component","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.3e112970.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/appLogo.d5e4c3c8.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction ProjectCard({ address, onDelete }) {\n  return (\n    <div className='col-6 my-2'>\n      <div className='card text-center' key={address}>\n        <div className='card-header'>\n          <strong>{address}</strong>\n        </div>\n        <div className='card-body'>\n          <Link to={`/view/${address}`} className='btn btn-primary mx-1'>\n            View project\n          </Link>\n          <Link to={`/update/${address}`} className='btn btn-info mx-1'>\n            Edit\n          </Link>\n          <button className='btn btn-danger' onClick={onDelete}>\n            Delete\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProjectCard;\n","import Web3 from 'web3';\n\nlet web3;\nconst INFURA_RINKEBY = 'https://rinkeby.infura.io/v3/dded8b6d9e1844dabf3329ccd394f290';\n\nif (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\n  // We are in the browser and metamask is running.\n  web3 = new Web3(window.web3.currentProvider);\n} else {\n  // We are on the server *OR* the user is not running metamask\n  const provider = new Web3.providers.HttpProvider(INFURA_RINKEBY);\n  web3 = new Web3(provider);\n}\n\nexport default web3;\n","import web3 from './web3';\nimport factory from './build/CampaignFactory.json';\n\nconst deployedContractAddress = '0x83103D1D1c4DaBD731A09286F4a39871d3F3464B';\n\n// getting the deployed instance of the the campaignFactory on the blockchain\nconst factoryInstance = new web3.eth.Contract(JSON.parse(factory.interface), deployedContractAddress);\n\nexport default factoryInstance;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport ProjectCard from '../component/ProjectCard';\nimport factoryInstance from '../ethereum/factory';\nimport web3 from '../ethereum/web3';\n\nexport const renderLoading = () => {\n  return (\n    <div className='spinner-border text-info mt-2 text-center mx-auto' role='status'>\n      <span className='sr-only'>Loading...</span>\n    </div>\n  );\n};\nconst NULL_ADDRESS = '0x0000000000000000000000000000000000000000';\n\nfunction ShowProjects() {\n  const [campaigns, setCampaigns] = useState({ isloading: true, results: [] });\n  const [reRender, setReRender] = useState(true);\n\n  useEffect(() => {\n    const getAllCampaigns = async () => {\n      const allCampaigns = await factoryInstance.methods.getDeployedContracts().call();\n      setCampaigns({ isloading: false, results: allCampaigns.filter((it) => it !== NULL_ADDRESS) });\n    };\n\n    getAllCampaigns();\n  }, [reRender]);\n\n  const onDelete = async (address) => {\n    const accounts = await web3.eth.getAccounts();\n    await factoryInstance.methods.deleteCampaign(address).send({\n      from: accounts[0],\n    });\n    setReRender(!reRender);\n  };\n\n  const renderAllCampaigns = () => {\n    return campaigns.isloading\n      ? renderLoading()\n      : campaigns.results.map((it) => <ProjectCard address={it} key={it} onDelete={() => onDelete(it)} />);\n  };\n\n  return (\n    <div>\n      <Link className='btn btn-success float-right mt-5' to='/create'>\n        <i className='fa fa-plus mr-1' />\n        Create Project\n      </Link>\n      <h1 className='my-5 text-center'>Projects Looking out for Funding</h1>\n      <div className='row'>{renderAllCampaigns()}</div>\n    </div>\n  );\n}\n\nexport default ShowProjects;\n","import React from 'react';\n\nexport default function From({ onFormSubmit, state, onChange, title, formType }) {\n  return (\n    <div>\n      <h1 className='mb-5'>{title}</h1>\n      <div>\n        <form onSubmit={onFormSubmit} className='row'>\n          <div className='input-group col-6 offset-2'>\n            <input\n              type='number'\n              value={state.minimumContribution}\n              className='form-control'\n              placeholder='Minimum Contribution'\n              name='minimumContribution'\n              onChange={onChange}\n            />\n            <div class='input-group-append'>\n              <span class='input-group-text' id='basic-addon2'>\n                Wei\n              </span>\n            </div>\n          </div>\n          <div className='col-6 offset-2 formTypemt-3'>\n            <textarea\n              rows='10'\n              type='text'\n              value={state.description}\n              className='form-control '\n              placeholder='description'\n              name='description'\n              onChange={onChange}\n            />\n          </div>\n          <div className='col-6 offset-2 mt-3'>\n            <button type='submit' className='btn btn-primary' disabled={state.isLoading}>\n              {state.isLoading && <span class='spinner-grow spinner-grow-sm mr-1' role='status' aria-hidden='true' />}\n              {formType === 'create' ? 'Create' : 'Update'} Project\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport factoryInstance from '../ethereum/factory';\nimport web3 from '../ethereum/web3';\nimport { useHistory } from 'react-router-dom';\nimport From from '../component/From';\n\nfunction CreateProject() {\n  const [state, setState] = useState({ minimumContribution: 0, description: '', message: '', isLoading: false });\n  const history = useHistory();\n\n  const onChange = (e) => {\n    e.persist();\n    setState((prevState) => ({ ...prevState, [e.target.name]: e.target.value }));\n  };\n\n  const onFormSubmit = async (e) => {\n    setState((prevState) => ({ ...prevState, isLoading: true, message: '' }));\n    e.preventDefault();\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await factoryInstance.methods\n        .createCampaign(state.minimumContribution, state.description)\n        .send({ from: accounts[0] });\n      setState((prevState) => ({ ...prevState, isLoading: false }));\n      history.push('/show');\n    } catch (err) {\n      setState((prevState) => ({ ...prevState, message: err.message, isLoading: false }));\n    }\n  };\n\n  const renderMessage = () => {\n    const className = 'alert alert-danger alert-dismissible fade show';\n    return (\n      !state.isLoading &&\n      !!state.message && (\n        <div className={`${className} p-3 mt-3`} role='alert'>\n          <h4 class='alert-heading'>Oops!</h4>\n          {state.message}\n          <button\n            type='button'\n            className='close'\n            data-dismiss='alert'\n            aria-label='Close'\n            onClick={() => {\n              setState((prevState) => ({ ...prevState, message: '' }));\n            }}\n          >\n            <span aria-hidden='true'>&times;</span>\n          </button>\n        </div>\n      )\n    );\n  };\n\n  return (\n    <div className='text-center'>\n      {renderMessage()}\n      <From\n        onFormSubmit={onFormSubmit}\n        onChange={onChange}\n        state={state}\n        title={'Create a new Project here'}\n        formType={'create'}\n      />\n    </div>\n  );\n}\n\nexport default CreateProject;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport appLogo from '../appLogo.png';\n\nfunction Navbar() {\n  return (\n    <nav className='navbar navbar-expand-lg navbar-light bg-light mb-3' style={{ backgroundColor: 'pink' }}>\n      <Link className='navbar-brand' href='/'>\n        <img src={appLogo} width='30' height='30' className='d-inline-block align-top mr-1' alt='' />\n        Coins Collect\n      </Link>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React, { useState } from 'react';\n\nfunction ContributeForm({ placeholder, buttonText, contributeToProject, isLoading }) {\n  const [state, setState] = useState({ amount: 0, isLoading: false, message: '' });\n\n  const onInputChange = (e) => {\n    setState({ amount: e.target.value });\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    setState((prevState) => ({ ...prevState, isLoading: true }));\n    await contributeToProject(state.amount);\n    setState((prevState) => ({ ...prevState, isLoading: false }));\n  };\n\n  const renderForm = () => {\n    return (\n      <div className='card col-8 px-4 py-4 text-center'>\n        <h5>Contribute Wei to Project!</h5>\n        <form onSubmit={onSubmit}>\n          <div className='input-group'>\n            <input\n              className='form-control'\n              type='number'\n              placeholder={placeholder}\n              onChange={onInputChange}\n              name='amount'\n              value={state.amount}\n            />\n            <div class='input-group-append'>\n              <span class='input-group-text' id='basic-addon2'>\n                Wei\n              </span>\n            </div>\n          </div>\n          <button type='submit' className='btn btn-primary mt-3' disabled={state.isLoading}>\n            {state.isLoading && <span class='spinner-grow spinner-grow-sm mr-1' role='status' aria-hidden='true' />}\n            {buttonText}\n          </button>\n        </form>\n      </div>\n    );\n  };\n\n  return <>{renderForm()}</>;\n}\n\nexport default ContributeForm;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst CONST_DEF = {\n  manager: 'The manager creates this campaign and can create requests to withdraw money',\n  basicContribution: 'You must contribute at least this much wei to become an approver',\n  request: 'A request tries to withdraw money from the contract prior approval',\n  contributors: 'Number of people who have already donated to this campaign',\n  balance: 'The balance is how much money this campaign has left to spend',\n};\n\nfunction ProjectDetails({ isLoading, result, campaignId }) {\n  const history = useHistory();\n\n  const renderCards = (title, value, style, className, metric, onClick, metaData) => {\n    return (\n      !isLoading && (\n        <div className={`card ${className} mb-3`} style={style} onClick={onClick}>\n          <div className='card-header'>\n            <strong>{title}</strong>\n          </div>\n          <div className='card-body'>\n            <p className='card-titile'>\n              <strong>\n                {`${value} `}\n                <em>{metric}</em>\n              </strong>\n            </p>\n            <p className='card-text text-muted'>{metaData}</p>\n          </div>\n        </div>\n      )\n    );\n  };\n\n  return (\n    <div className='col-6'>\n      <div className='col-12'>\n        {renderCards('Manager Info', result[0], {}, 'bg-light', null, null, CONST_DEF['manager'])}\n      </div>\n      <div className='col-12'>{renderCards('Project Description', result[1], {}, 'bg-light')}</div>\n      <div className='row'>\n        <div className='col-6'>\n          {renderCards('Balance Amount', result[2], {}, 'bg-light', 'Wei', null, CONST_DEF['balance'])}\n        </div>\n        <div className='col-6'>\n          {renderCards('Basic Contribution', result[3], {}, 'bg-light', 'Wei', null, CONST_DEF['basicContribution'])}\n        </div>\n      </div>\n      <div className='row'>\n        <div className='col-6'>\n          {renderCards('Contributors Count', result[4], {}, 'bg-light', null, null, CONST_DEF['contributors'])}\n        </div>\n        <div className='col-6'>\n          {renderCards(\n            'Spending Requests Count',\n            result[5],\n            { cursor: 'pointer' },\n            'bg-light',\n            null,\n            () => history.push(`/campaigns/${campaignId}/requests`),\n            CONST_DEF['request']\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProjectDetails;\n","import React, { useState } from 'react';\n\nfunction SpendingRequestForm({ onFormSubmit, isLoading }) {\n  const [state, setState] = useState({ description: '', value: '', recepient: '', isLoading: false });\n\n  const onChange = (e) => {\n    e.persist();\n    setState((prevState) => ({ ...prevState, [e.target.name]: e.target.value }));\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    setState((prevState) => ({ ...prevState, isLoading: true }));\n    await onFormSubmit(state.description, state.value, state.recepient);\n    setState((prevState) => ({ ...prevState, isLoading: false }));\n  };\n\n  const renderForm = () => {\n    return (\n      <div className='card col-8 px-4 py-4 mt-2 text-center'>\n        <h5>Create Spending Request!</h5>\n        <form onSubmit={onSubmit}>\n          <div className='input-group'>\n            <input name='value' placeholder='value' onChange={onChange} className='form-control' />\n            <div class='input-group-append'>\n              <span class='input-group-text' id='basic-addon2'>\n                Wei\n              </span>\n            </div>\n          </div>\n\n          <input name='recepient' placeholder='recepient' onChange={onChange} className='form-control my-2' />\n          <textarea\n            rows='5'\n            name='description'\n            placeholder='description'\n            onChange={onChange}\n            className='form-control my-1'\n          />\n          <button type='submit' className='btn btn-primary mt-3' disabled={state.isLoading}>\n            {state.isLoading && <span class='spinner-grow spinner-grow-sm mr-1' role='status' aria-hidden='true' />}\n            Create Request\n          </button>\n        </form>\n      </div>\n    );\n  };\n\n  return renderForm();\n}\n\nexport default SpendingRequestForm;\n","import campaign from '../ethereum/build/Campaign.json';\nimport web3 from './web3';\n\nconst getDeployedCampaignInstance = (address) => {\n  return new web3.eth.Contract(JSON.parse(campaign.interface), address);\n};\n\nexport default getDeployedCampaignInstance;\n","import React, { useEffect, useState } from 'react';\nimport ContributeForm from '../component/ContributeForm';\nimport ProjectDetails from '../component/ProjectDetails';\nimport SpendingRequestForm from '../component/SpendingRequestForm';\nimport getCampaignInstance from '../ethereum/campaign';\nimport web3 from '../ethereum/web3';\nimport { renderLoading } from './ShowProjects';\n\nfunction ViewProjectDetails(props) {\n  const { campaignId } = props.match.params;\n  const [state, setState] = useState({ isLoading: true, result: {}, message: '' });\n  const [reRender, setReRender] = useState(false);\n\n  const campaignInstance = getCampaignInstance(campaignId);\n\n  useEffect(() => {\n    const getProejctData = async () => {\n      try {\n        const projectData = await campaignInstance.methods.getCampaignInfo().call();\n        setState((prevState) => ({ ...prevState, isLoading: false, result: projectData }));\n      } catch (err) {\n        setState((prevState) => ({ ...prevState, message: err.message, isLoading: false }));\n      }\n    };\n    getProejctData();\n  }, [reRender]);\n\n  const loadingData = () => {\n    return state.isLoading && <div className='text-center'>{renderLoading()}</div>;\n  };\n\n  const createSpendingRequest = async (desc, value, rece) => {\n    const accounts = await web3.eth.getAccounts();\n    try {\n      await campaignInstance.methods.createSpendingRequest(desc, value, rece).send({\n        from: accounts[0],\n      });\n      setReRender(!reRender);\n    } catch (err) {\n      setState((prevState) => ({ ...prevState, message: err.message }));\n    }\n  };\n\n  const contributeToProject = async (value) => {\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await campaignInstance.methods.contribute().send({\n        from: accounts[0],\n        value,\n      });\n      setReRender(!reRender);\n    } catch (err) {\n      setState((prevState) => ({ ...prevState, message: err.message }));\n    }\n  };\n\n  const renderForms = () => {\n    return (\n      !state.isLoading && (\n        <div className='row mt-5'>\n          <ProjectDetails result={state.result} isLoading={state.isLoading} campaignId={campaignId} />\n          <div className='col-6'>\n            <ContributeForm\n              placeholder='Contribution Amount'\n              buttonText='contribute'\n              isLoading={state.isLoading}\n              contributeToProject={contributeToProject}\n            />\n            <SpendingRequestForm onFormSubmit={createSpendingRequest} isLoading={state.isLoading} />\n          </div>\n        </div>\n      )\n    );\n  };\n\n  return (\n    <>\n      <h2 className='text-center'>\n        <strong>{campaignId}</strong>\n      </h2>\n      <div className='text-center'>\n        {loadingData()}\n        {renderForms()}\n      </div>\n    </>\n  );\n}\n\nexport default ViewProjectDetails;\n","import React, { useState } from 'react';\n\nfunction RequestTableRow({ counter, rowData, contributorsCount, finalizeRequest, approveRequest }) {\n  const [state, setState] = useState(false);\n\n  const onClick = async (e) => {\n    if (contributorsCount / 2 < rowData[4]) {\n      setState(true);\n      await finalizeRequest(e, counter);\n    } else {\n      setState(true);\n      await approveRequest(counter);\n    }\n    setState(false);\n  };\n\n  return (\n    <tr>\n      <th scope='row'>{counter + 1}</th>\n      <td>{rowData[0]}</td>\n      <td>{rowData[1]}</td>\n      <td>{rowData[2]}</td>\n      <td>{rowData[3] ? 'Completed' : 'Pending'}</td>\n      <td>{`${rowData[4]}/${contributorsCount}`}</td>\n      <td>\n        <button\n          className={`btn btn-sm ${contributorsCount / 2 < rowData[4] ? 'btn-success' : 'btn-info'} `}\n          style={{ cursor: 'default' }}\n          disabled={rowData[3]}\n          onClick={(e) => onClick(e)}\n        >\n          {contributorsCount / 2 < rowData[4] ? 'Finalize' : 'Approve'}\n          {state && <span class='spinner-grow spinner-grow-sm mr-1' role='status' aria-hidden='true' />}\n        </button>\n      </td>\n    </tr>\n  );\n}\n\nexport default RequestTableRow;\n","import React, { useEffect, useState } from 'react';\nimport getCampaignInstance from '../ethereum/campaign';\nimport { renderLoading } from './ShowProjects';\nimport web3 from '../ethereum/web3';\nimport RequestTableRow from '../component/RequestTableRow';\n\nfunction ViewSpendingRequests(props) {\n  const { campaignId } = props.match.params;\n  const [state, setState] = useState({\n    spendingRequests: [],\n    isLoading: true,\n    contributorsCount: 0,\n    message: '',\n  });\n  const campaign = getCampaignInstance(campaignId);\n\n  useEffect(() => {\n    async function getSpendingRequests() {\n      let srArr = [];\n      const cCount = await campaign.methods.contributorsCount().call();\n      const srLen = await campaign.methods.getSpendingRequestLength().call();\n      for (let i = 0; i < srLen; i++) {\n        const sr = await campaign.methods.requests(i).call();\n        srArr.push(sr);\n      }\n      setState({ spendingRequests: srArr, isLoading: false, contributorsCount: cCount });\n    }\n    getSpendingRequests();\n  }, []);\n\n  const approveRequest = async (index) => {\n    try {\n      // setState((prevState) => ({ ...prevState ));\n      const account = await web3.eth.getAccounts();\n      await campaign.methods.approveRequest(index).send({\n        from: account[0],\n      });\n      setState((prevState) => ({ ...prevState }));\n    } catch (err) {\n      setState((prevState) => ({ ...prevState, message: err.message }));\n    }\n  };\n\n  const finalizeRequest = async (e, index) => {\n    if (e.target.disabled) {\n      // or this.disabled\n      return;\n    }\n    try {\n      // setState((prevState) => ({ ...prevState ));\n      const account = await web3.eth.getAccounts();\n      await campaign.methods.finalizeRequest(index).send({\n        from: account[0],\n      });\n      setState((prevState) => ({ ...prevState }));\n    } catch (err) {\n      setState((prevState) => ({ ...prevState, message: err.message }));\n    }\n  };\n\n  if (state && state.isLoading) return <div className='text-center'>{renderLoading()}</div>;\n\n  const renderSpendingRequests = () => {\n    return state.spendingRequests.map((it, i) => {\n      console.log(it);\n      return (\n        <RequestTableRow\n          counter={i}\n          rowData={it}\n          contributorsCount={state.contributorsCount}\n          finalizeRequest={finalizeRequest}\n          approveRequest={approveRequest}\n        />\n      );\n    });\n  };\n\n  const renderTableHeader = () => {\n    return (\n      <thead>\n        <tr>\n          <th scope='col'>#</th>\n          <th scope='col'>Description</th>\n          <th scope='col'>Amount (in Wei)</th>\n          <th scope='col'>Recepient</th>\n          <th scope='col'>Status</th>\n          <th scope='col'>Approvals</th>\n          <th scope='col'>Action</th>\n        </tr>\n      </thead>\n    );\n  };\n\n  const renderMessage = () => {\n    const className = 'alert alert-danger alert-dismissible fade show';\n    return (\n      !!state.message && (\n        <div className={`${className} p-1 mt-3 text-center`} role='alert' style={{ textOverflow: 'ellipsis' }}>\n          <h4 class='alert-heading'>Oops!</h4>\n          {state.message}\n          <button\n            type='button'\n            className='close'\n            data-dismiss='alert'\n            aria-label='Close'\n            onClick={() => {\n              setState((prevState) => ({ ...prevState, message: '' }));\n            }}\n          >\n            <span aria-hidden='true'>&times;</span>\n          </button>\n        </div>\n      )\n    );\n  };\n\n  return (\n    <>\n      {renderMessage()}\n      <table className='table'>\n        {renderTableHeader()}\n        <tbody>{renderSpendingRequests()}</tbody>\n      </table>\n    </>\n  );\n}\n\nexport default ViewSpendingRequests;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport From from '../component/From';\nimport getDeployedCampaignInstance from '../ethereum/campaign';\nimport web3 from '../ethereum/web3';\n\nfunction UpdateProject(props) {\n  const [state, setState] = useState({ minimumContribution: 0, description: '', message: '', isLoading: false });\n  const history = useHistory();\n  const { campaignId } = props.match.params;\n  const campaign = getDeployedCampaignInstance(campaignId);\n\n  const onChange = (e) => {\n    e.persist();\n    setState((prevState) => ({ ...prevState, [e.target.name]: e.target.value }));\n  };\n\n  useEffect(() => {\n    const getIntialData = async () => {\n      setState((prevState) => ({ ...prevState, isLoading: true }));\n      const res = await campaign.methods.getCampaignInfo().call();\n      setState((prevState) => ({ ...prevState, minimumContribution: res[3], description: res[1], isLoading: false }));\n    };\n    getIntialData();\n  }, []);\n\n  const onFormSubmit = async (e) => {\n    setState((prevState) => ({ ...prevState, isLoading: true, message: '' }));\n    e.preventDefault();\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.updateCampaign(state.minimumContribution, state.description).send({ from: accounts[0] });\n      setState((prevState) => ({ ...prevState, isLoading: false }));\n      history.push('/show');\n    } catch (err) {\n      setState((prevState) => ({ ...prevState, message: err.message, isLoading: false }));\n    }\n  };\n\n  const renderMessage = () => {\n    const className = 'alert alert-danger alert-dismissible fade show';\n    return (\n      !state.isLoading &&\n      !!state.message && (\n        <div className={`${className} p-3 mt-3`} role='alert'>\n          <h4 className='alert-heading'>Oops!</h4>\n          {state.message}\n          <button\n            type='button'\n            className='close'\n            data-dismiss='alert'\n            aria-label='Close'\n            onClick={() => {\n              setState((prevState) => ({ ...prevState, message: '' }));\n            }}\n          >\n            <span aria-hidden='true'>&times;</span>\n          </button>\n        </div>\n      )\n    );\n  };\n\n  return (\n    <div className='text-center'>\n      {renderMessage()}\n      <From\n        onFormSubmit={onFormSubmit}\n        onChange={onChange}\n        state={state}\n        title={'Update your Project here'}\n        formType={'update'}\n      />\n    </div>\n  );\n}\n\nexport default UpdateProject;\n","import React from 'react';\nimport './App.css';\nimport ShowProjects from './containers/ShowProjects';\nimport CreateProject from './containers/CreateProject';\nimport Navbar from './component/Navbar';\nimport { Switch, Route } from 'react-router-dom';\nimport ViewProjectDetails from './containers/ViewProjectDetails';\nimport ViewSpendingRequests from './containers/ViewSpendingRequests';\nimport UpdateProject from './containers/UpdateProject';\n\nfunction App() {\n  return (\n    <div>\n      <Navbar />\n      <div className='container'>\n        <Switch>\n          <Route path='/show' component={ShowProjects} />\n          <Route path='/create' component={CreateProject} />\n          <Route path='/view/:campaignId' component={ViewProjectDetails} />\n          <Route path='/update/:campaignId' component={UpdateProject} />\n          <Route path='/campaigns/:campaignId/requests' component={ViewSpendingRequests} />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}